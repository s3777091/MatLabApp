% Initialize the serial port
clc; clear; close all; format compact; format shortG

s = serialport('/dev/tty.usbserial-21230', 115200);

configureTerminator(s, "LF"); % Setting the terminator to Line Feed

% Use this code to read data from the serial port
% Flush the previous data
flush(s);

% Example theta values (replace these with your calculated values)
theta1 = 180;
theta2 = 90;
theta3 = 45;

% Send theta1 as 'a' followed by the value
write(s, sprintf('a%.2f\n', theta1), "string");

% Send theta2 as 's' followed by the value
write(s, sprintf('s%.2f\n', theta2), "string");

% Send theta3 as 'd' followed by the value
write(s, sprintf('d%.2f\n', theta3), "string");

% Example: Sending these values in a loop for testing
while true
    flush(s);
    data = readline(s);

    % Parse the string based on the known format "X: %.2f, Y: %.2f, Z: %d, θ1: %.2f, θ2: %.2f, θ3: %.2f"
    
    parsedData = sscanf(data, 'X: %f, Y: %f, Z: %d, θ1: %f, θ2: %f, θ3: %f');
    
    % Extract X, Y, Z values
    
    X = parsedData(1);
    
    Y = parsedData(2);
    
    Z = parsedData(3);
    
    % Display the values
    
    disp(['X: ', num2str(X)]);
    
    disp(['Y: ', num2str(Y)]);
    
    disp(['Z: ', num2str(Z)]);

    % Update theta values here based on your logic
    theta1 = theta1 + 90;
    theta2 = theta2 + 1;
    theta3 = theta3 + 1;

    % Send updated theta values
    write(s, sprintf('a%.2f\n', theta1), "string");
    write(s, sprintf('s%.2f\n', theta2), "string");
    write(s, sprintf('d%.2f\n', theta3), "string");

    pause(1); % Pause for 1 second (adjust as needed)
end
